<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>算法 - 标签 - 黄波的博客</title><link>https://dilless.github.io/tags/%E7%AE%97%E6%B3%95/</link><description>算法 - 标签 - 黄波的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 16 Aug 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://dilless.github.io/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml"/><item><title>数据结构和算法学习笔记（三）堆排序和桶排序</title><link>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/3-heap-sort-bucket-sort/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0800</pubDate><author>黄波</author><guid>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/3-heap-sort-bucket-sort/</guid><description>1. 堆和堆排序 1.1 堆(Heap) 基本概念： 满二叉树：是一个绝对的三角形，也就是说它的最后一层全部是叶子节点 完全二叉树：他的最后一层可能不是完整的</description></item><item><title>数据结构和算法学习笔记（二）O(NlogN) 的排序</title><link>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/2-nlogn-sort/</link><pubDate>Mon, 15 Aug 2022 00:00:00 +0800</pubDate><author>黄波</author><guid>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/2-nlogn-sort/</guid><description>1. 归并排序 代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def merge_sort(arr: List[int]) -&amp;gt; None: if not arr or len(arr) &amp;lt;= 1: return process(arr, 0, len(arr) - 1) def process(arr: List[int], left: int, right: int) -&amp;gt; None: if left</description></item><item><title>数据结构和算法学习笔记（一）复杂度和简单排序算法</title><link>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/1-complexity-and-simple-sort-algorithm/</link><pubDate>Sun, 14 Aug 2022 00:00:00 +0800</pubDate><author>黄波</author><guid>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/1-complexity-and-simple-sort-algorithm/</guid><description>1. 时间复杂度 时间复杂度：算法总操作数的表达式中，只要高阶项，不要高阶项的系数，剩下的部分假设为 f(n)，则时间复杂度为 O(f(n)) O(f(n)) 按照算法可能遇到的</description></item></channel></rss>