<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>二叉树 - 标签 - 黄波的博客</title><link>https://dilless.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><description>二叉树 - 标签 - 黄波的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 22 Aug 2022 20:00:00 +0800</lastBuildDate><atom:link href="https://dilless.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/" rel="self" type="application/rss+xml"/><item><title>数据结构和算法学习笔记（三）二叉树</title><link>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/3-binary-tree/</link><pubDate>Mon, 22 Aug 2022 20:00:00 +0800</pubDate><author>黄波</author><guid>https://dilless.github.io/posts/notes/datastructure_algorithm/zuochengyun/3-binary-tree/</guid><description>1. 遍历二叉树 递归序 1,2,4,4,4,2,5,5,5,2,1,3,6,6,6,3,7,7,7,3,1 即为递归序 先序遍历 对于每棵子树，先打印头节点，再打印左子树，再打印右子树 在递归序中，只有第一次碰到，才打印 中序遍历 对于每</description></item></channel></rss>